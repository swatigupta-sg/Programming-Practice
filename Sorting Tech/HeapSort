#include<bits/stdc++.h>
using namespace std;

void heapify(int a[], int i, int n){
    int left = 2*i;
    int right = left+1;
    int largest = i;
    if(left<=n && a[left]>a[largest]) largest = left;
    if(right<=n && a[right]>a[largest]) largest = right;
    if(largest!=i){
        swap(a[i], a[largest]);
        heapify(a,largest,n);
    }
}

void buildheapOptimised(int a[], int n){
    for(int  i=n/2;i>=1;i--){
        heapify(a,i,n-1);
    }
}

void buildheap(int a[], int n){
    for(int i=2;i<n;i++){
        int ind = i;
        int parent = i/2;
        while(ind>1 && a[ind]>a[parent]){
            swap(a[ind], a[parent]);
            ind = parent;
            parent = parent/2;
        }
    }
}


void heapsort(int a[], int n){
    buildheap(a,n);
    while(n>1){
        swap(a[1], a[n-1]);
        n--;
        heapify(a,1,n-1);
    }
}

int main() {
    int a[] = {-1,3,4,5,6,1,2,7,9,8};
    int n = sizeof(a)/sizeof(int);
    heapsort(a,n);
    for(int i=1;i<n;i++) cout<<a[i]<<" ";
}
