int solve(int arr[], int m){
    int i=0;
    stack<int> s;
    int ans = 0, area = 0, tp;
    while(i<m){
        if(s.empty()||arr[i]>=arr[s.top()]) s.push(i++);
        else{
            tp = s.top();
            s.pop();
            area = arr[tp] * (s.empty()?i:i-s.top()-1);
            ans = max(ans, area);
        }
    }
    while(!s.empty()){
        tp = s.top();
        s.pop();
        area = arr[tp] * (s.empty()?i:i-s.top()-1);
        ans = max(ans, area);
    }
    return ans;
}


/*You are required to complete this method*/
int maxArea(int M[MAX][MAX], int n, int m) {
    int ans = solve(M[0], m);
    
    for(int i=1;i<n;i++){
        for(int j=0;j<m;j++){
            if(M[i][j]) M[i][j] +=  M[i-1][j];
        }
        ans = max(ans, solve(M[i],m));
    }
    return ans;
}
