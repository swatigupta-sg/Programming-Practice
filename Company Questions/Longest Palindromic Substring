class Solution {
public:
    string longestPalindrome(string s) {
        if(s=="") return s;
        int n = s.length();
        bool dp[n][n];
        memset(dp, 0,sizeof(dp));
        int maxlength = 1,start = 0;
        for(int i=0;i<n;i++) dp[i][i] = true;
        
        for(int i=0;i<n-1;i++){
            if(s[i]==s[i+1]){
                dp[i][i+1] = true;
                maxlength = 2;
                start = i;
            }
        }
        
        for(int k=3;k<=n;k++){
            for(int i=0;i<n-k+1;i++){
                int j = i+k-1;
                if(s[i]==s[j] && dp[i+1][j-1]){
                    dp[i][j] = true;
                    if(k>maxlength){
                        start = i;
                        maxlength = k;
                    }
                }
            }
        }
        
        string str = s.substr(start,maxlength);
        return str;        
    }
};
