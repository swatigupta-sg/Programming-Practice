#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node *left;
    node *right;
};
int ans = 0;
node *newnode(int d){
    node* New = new node;
    New->data = d;
    New->left = New->right = NULL;
    return New;
}
void perorder(node *root){
    if(root==NULL) return;
    cout<<root->data<<" ";
    perorder(root->left);
    perorder(root->right);
}
int solve(node *root){
    if(root==NULL) return 0;
    int l = solve(root->left);
    int r = solve(root->right);
    if(abs(l-r)>=2){
        ans += abs(l-r) -1;
    }
    cout<<l<<" "<<r<<endl;
    return max(l,r)+1;
}
int main() {
    int n;
    cin>>n;
    node *root = newnode(0);
    queue<node *> q;
    q.push(root);
    int i = 0;
    int a[n];
    for(i=0;i<n;i++){
        cin>>a[i];
    }
    i=0;
    int j = 1;
    while(!q.empty() && i<n){
        auto node = q.front();
        q.pop();
        if(a[i]==node->data){
            node->left = newnode(j++);
            q.push(node->left);
            i++;
        } 
        if(i<n && a[i]==node->data){
            node->right = newnode(j++);
            q.push(node->right);
            i++;
        } 
    }
    // perorder(root);
    // cout<<endl;
    solve(root);
    cout<<ans;
}
