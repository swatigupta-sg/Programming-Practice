class Solution {
public:
    int bounds(int i, int j, int m, int n, vector<vector<int>> &grid){
        int ans = 0;
        if(i==0) ans++;
        if(i==m-1) ans++;
        if(j==0) ans++;
        if(j==n-1) ans++;
        if(i-1>=0 && grid[i-1][j]==0) ans++;
        if(i+1<m && grid[i+1][j]==0) ans++;
        if(j-1>=0 && grid[i][j-1]==0) ans++;
        if(j+1<n && grid[i][j+1]==0) ans++; 
        return ans;
    }
    int islandPerimeter(vector<vector<int>>& grid) {
        int per = 0;
        int m = grid.size();
        int n = grid[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1) {
                    per += bounds(i,j,m,n,grid);
                }
            }
        }
        return per;
    }
};
